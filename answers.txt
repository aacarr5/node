var fs = require('fs')

var buffer = fs.readFileSync(process.argv[2])

var bufferAsString = buffer.toString()

console.log(bufferAsString.split("\n").length-1)

Here's the official solution in case you want to compare notes:

────────────────────────────────────────────────────────────────────────────────
    var fs = require('fs')
    var file = process.argv[2]

    fs.readFile(file, function (err, contents) {
      // fs.readFile(file, 'utf8', callback) can also be used
      var lines = contents.toString().split('\n').length - 1
      console.log(lines)
    })

────────────────────────────────────────────────────────────────────────────────

Your solution to FILTERED LS passed!
My solution:

var fs = require('fs')
var dir = process.argv[2]
var type = ".".concat(process.argv[3])


fs.readdir(dir, function(err,contents){
  contents.filter(function(file) {
    lastChars = file.substr(file.length-type.length)
    if (lastChars === type)
      console.log(file)
  })
})

Their Solution:
    var fs = require('fs')
    var path = require('path')

    fs.readdir(process.argv[2], function (err, list) {
      list.forEach(function (file) {
        if (path.extname(file) === '.' + process.argv[3])
          console.log(file)
      })
    })
